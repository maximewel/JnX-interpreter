Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    J
    N
    X

Grammar

Rule 0     S' -> document
Rule 1     document -> line
Rule 2     document -> line document
Rule 3     line -> balise_start content balise_end
Rule 4     balise_start -> < content / >
Rule 5     balise_start -> < content >
Rule 6     balise_end -> < / content >
Rule 7     content -> IDENTIFIER
Rule 8     content -> line

Terminals, with rules where they appear

/                    : 4 6
<                    : 4 5 6
>                    : 4 5 6
IDENTIFIER           : 7
J                    : 
N                    : 
X                    : 
error                : 

Nonterminals, with rules where they appear

balise_end           : 3
balise_start         : 3
content              : 3 4 5 6
document             : 2 0
line                 : 1 2 8

Parsing method: LALR

state 0

    (0) S' -> . document
    (1) document -> . line
    (2) document -> . line document
    (3) line -> . balise_start content balise_end
    (4) balise_start -> . < content / >
    (5) balise_start -> . < content >

    <               shift and go to state 4

    document                       shift and go to state 1
    line                           shift and go to state 2
    balise_start                   shift and go to state 3

state 1

    (0) S' -> document .



state 2

    (1) document -> line .
    (2) document -> line . document
    (1) document -> . line
    (2) document -> . line document
    (3) line -> . balise_start content balise_end
    (4) balise_start -> . < content / >
    (5) balise_start -> . < content >

    $end            reduce using rule 1 (document -> line .)
    <               shift and go to state 4

    line                           shift and go to state 2
    document                       shift and go to state 5
    balise_start                   shift and go to state 3

state 3

    (3) line -> balise_start . content balise_end
    (7) content -> . IDENTIFIER
    (8) content -> . line
    (3) line -> . balise_start content balise_end
    (4) balise_start -> . < content / >
    (5) balise_start -> . < content >

    IDENTIFIER      shift and go to state 7
    <               shift and go to state 4

    balise_start                   shift and go to state 3
    content                        shift and go to state 6
    line                           shift and go to state 8

state 4

    (4) balise_start -> < . content / >
    (5) balise_start -> < . content >
    (7) content -> . IDENTIFIER
    (8) content -> . line
    (3) line -> . balise_start content balise_end
    (4) balise_start -> . < content / >
    (5) balise_start -> . < content >

    IDENTIFIER      shift and go to state 7
    <               shift and go to state 4

    content                        shift and go to state 9
    line                           shift and go to state 8
    balise_start                   shift and go to state 3

state 5

    (2) document -> line document .

    $end            reduce using rule 2 (document -> line document .)


state 6

    (3) line -> balise_start content . balise_end
    (6) balise_end -> . < / content >

    <               shift and go to state 11

    balise_end                     shift and go to state 10

state 7

    (7) content -> IDENTIFIER .

    <               reduce using rule 7 (content -> IDENTIFIER .)
    /               reduce using rule 7 (content -> IDENTIFIER .)
    >               reduce using rule 7 (content -> IDENTIFIER .)


state 8

    (8) content -> line .

    <               reduce using rule 8 (content -> line .)
    /               reduce using rule 8 (content -> line .)
    >               reduce using rule 8 (content -> line .)


state 9

    (4) balise_start -> < content . / >
    (5) balise_start -> < content . >

    /               shift and go to state 12
    >               shift and go to state 13


state 10

    (3) line -> balise_start content balise_end .

    <               reduce using rule 3 (line -> balise_start content balise_end .)
    $end            reduce using rule 3 (line -> balise_start content balise_end .)
    /               reduce using rule 3 (line -> balise_start content balise_end .)
    >               reduce using rule 3 (line -> balise_start content balise_end .)


state 11

    (6) balise_end -> < . / content >

    /               shift and go to state 14


state 12

    (4) balise_start -> < content / . >

    >               shift and go to state 15


state 13

    (5) balise_start -> < content > .

    IDENTIFIER      reduce using rule 5 (balise_start -> < content > .)
    <               reduce using rule 5 (balise_start -> < content > .)


state 14

    (6) balise_end -> < / . content >
    (7) content -> . IDENTIFIER
    (8) content -> . line
    (3) line -> . balise_start content balise_end
    (4) balise_start -> . < content / >
    (5) balise_start -> . < content >

    IDENTIFIER      shift and go to state 7
    <               shift and go to state 4

    content                        shift and go to state 16
    line                           shift and go to state 8
    balise_start                   shift and go to state 3

state 15

    (4) balise_start -> < content / > .

    IDENTIFIER      reduce using rule 4 (balise_start -> < content / > .)
    <               reduce using rule 4 (balise_start -> < content / > .)


state 16

    (6) balise_end -> < / content . >

    >               shift and go to state 17


state 17

    (6) balise_end -> < / content > .

    <               reduce using rule 6 (balise_end -> < / content > .)
    $end            reduce using rule 6 (balise_end -> < / content > .)
    /               reduce using rule 6 (balise_end -> < / content > .)
    >               reduce using rule 6 (balise_end -> < / content > .)

